from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

start_router = Router()


class RestourantReview(StatesGroup):
    name = State()
    contact = State()
    food_rating = State()
    cleanliness_rating = State()
    extra_comments = State()


@start_router.message(Command("start"))
async def start_handler(message: types.Message):
    kb = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="feedback"),
                types.InlineKeyboardButton(text="–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å", callback_data="donate"),
            ],
            [
                types.InlineKeyboardButton(text="–ù–∞—à —Å–∞–π—Ç", url="https://geeks.kg"),
                types.InlineKeyboardButton(text="–ù–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º", url="https://geeks.kg")
            ],
        ]
    )
    await message.answer(
        "üç¥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω!  \n "
        "–Ø ‚Äî –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –ø–æ–º–æ–≥—É:\n "
        "‚ú® –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω—é.\n "
        "‚ú®–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥:\n "
        "–°—É–ø—ã, –°–∞–ª–∞—Ç—ã, –ó–∞–∫—É—Å–∫–∏, –û—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏, –ì–æ—Ä—è—á–∏–µ –Ω–∞–ø–∏—Ç–∫–∏, –î–µ—Å–µ—Ä—Ç—ã", reply_markup=kb)


@start_router.callback_query(F.data == "feedback")
async def start_feedback(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    await state.set_state(RestourantReview.name)


@start_router.message(RestourantReview.name)
async def process_name(message: types.Message, state: FSMContext):
    name = message.text
    await state.update_data(name=name)
    await message.answer("–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º?")
    await state.set_state(RestourantReview.contact)


@start_router.message(RestourantReview.contact)
async def process_contact(message: types.Message, state: FSMContext):
    contact = message.text
    await state.update_data(contact=contact)
    await message.answer("–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –µ–¥—ã? (1 - –ø–ª–æ—Ö–æ, 5 - –æ—Ç–ª–∏—á–Ω–æ)")
    await state.set_state(RestourantReview.food_rating)


@start_router.message(RestourantReview.food_rating)
async def process_food_rating(message: types.Message, state: FSMContext):
    food_rating = message.text
    await state.update_data(food_rating=food_rating)
    await message.answer("–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —á–∏—Å—Ç–æ—Ç—É –∑–∞–≤–µ–¥–µ–Ω–∏—è? (1 - –ø–ª–æ—Ö–æ, 5 - –æ—Ç–ª–∏—á–Ω–æ)")
    await state.set_state(RestourantReview.cleanliness_rating)


@start_router.message(RestourantReview.cleanliness_rating)
async def process_cleanliness_rating(message: types.Message, state: FSMContext):
    cleanliness_rating = message.text
    await state.update_data(cleanliness_rating=cleanliness_rating)
    await message.answer("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–ª–∏ –∂–∞–ª–æ–±—ã:")
    await state.set_state(RestourantReview.extra_comments)


@start_router.message(RestourantReview.extra_comments)
async def process_extra_comments(message: types.Message, state: FSMContext):
    extra_comments = message.text
    data = await state.get_data()
    summary = (
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!\n"
        f"–ò–º—è: {data.get('name')}\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç: {data.get('contact')}\n"
        f"–û—Ü–µ–Ω–∫–∞ –µ–¥—ã: {data.get('food_rating')}\n"
        f"–û—Ü–µ–Ω–∫–∞ —á–∏—Å—Ç–æ—Ç—ã: {data.get('cleanliness_rating')}\n"
        f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {extra_comments}"
    )
    await message.answer(summary)
    await state.clear()
